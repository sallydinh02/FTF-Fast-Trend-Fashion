{"ast":null,"code":"var _jsxFileName = \"D:\\\\4 Spring-2024\\\\CPSC 491 Capstone\\\\ftf-fast-trend-fashion\\\\src\\\\pages\\\\SearchNew.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport Helmet from '../components/Helmet';\nimport CheckBox from '../components/CheckBox';\nimport productData from '../assets/data-loaded/products';\nimport genre from '../assets/data-loaded/genre';\nimport booktypes from '../assets/data-loaded/booktype';\n// import size from '../assets/data-loaded/product-size'\nimport Button from '../components/Button';\nimport InfinityList from '../components/InfinityList';\nimport SearchBar from '../components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchNew = () => {\n  _s();\n  const initFilter = {\n    genre: [],\n    booktype: [],\n    size: []\n  };\n  const productList = productData.getAllProducts();\n  const [products, setProducts] = useState(productList);\n  const [filter, setFilter] = useState(initFilter);\n  const filterSelect = (type, checked, item) => {\n    if (checked) {\n      switch (type) {\n        case \"genre\":\n          setFilter({\n            ...filter,\n            genre: [...filter.genre, item.genreSlug]\n          });\n          break;\n        case \"BOOK TYPE\":\n          setFilter({\n            ...filter,\n            booktype: [...filter.booktype, item.booktype]\n          });\n          break;\n        default:\n      }\n    } else {\n      switch (type) {\n        case \"GENRE\":\n          const newGenre = filter.genre.filter(e => e !== item.genreSlug);\n          setFilter({\n            ...filter,\n            genre: newGenre\n          });\n          break;\n        case \"BOOK TYPE\":\n          const newBookType = filter.booktype.filter(e => e !== item.booktype);\n          setFilter({\n            ...filter,\n            booktype: newBookType\n          });\n          break;\n        default:\n      }\n    }\n  };\n  const clearFilter = () => setFilter(initFilter);\n  const updateProducts = useCallback(() => {\n    let temp = productList;\n    if (filter.genre.length > 0) {\n      temp = temp.filter(e => filter.genre.includes(e.genreSlug));\n    }\n    if (filter.booktype.length > 0) {\n      temp = temp.filter(e => {\n        const check = e.booktypes.find(booktype => filter.booktype.includes(booktype));\n        return check !== undefined;\n      });\n    }\n    setProducts(temp);\n  }, [filter, productList]);\n  useEffect(() => {\n    updateProducts();\n  }, [updateProducts]);\n  const filterRef = useRef(null);\n  const showHideFilter = () => filterRef.current.classList.toggle('active');\n  return (\n    /*#__PURE__*/\n    // <Helmet title=\"Search Product\">\n    _jsxDEV(\"div\", {\n      className: \"catalog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalog__content\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          placeholder: \"Search for product\",\n          data: products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookresults\",\n          children: /*#__PURE__*/_jsxDEV(InfinityList, {\n            data: products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n    // </Helmet>\n  );\n};\n_s(SearchNew, \"d6oze0CPPWJbcPfWNc62Cg/TAIE=\");\n_c = SearchNew;\nexport default SearchNew;\nvar _c;\n$RefreshReg$(_c, \"SearchNew\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","useRef","Helmet","CheckBox","productData","genre","booktypes","Button","InfinityList","SearchBar","SearchNew","initFilter","booktype","size","productList","getAllProducts","products","setProducts","filter","setFilter","filterSelect","type","checked","item","genreSlug","newGenre","e","newBookType","clearFilter","updateProducts","temp","length","includes","check","find","undefined","filterRef","showHideFilter","current","classList","toggle"],"sources":["D:/4 Spring-2024/CPSC 491 Capstone/ftf-fast-trend-fashion/src/pages/SearchNew.jsx"],"sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport CheckBox from '../components/CheckBox'\r\nimport productData from '../assets/data-loaded/products'\r\nimport genre from '../assets/data-loaded/genre'\r\nimport booktypes from '../assets/data-loaded/booktype'\r\n// import size from '../assets/data-loaded/product-size'\r\nimport Button from '../components/Button'\r\nimport InfinityList from '../components/InfinityList'\r\nimport SearchBar from '../components/SearchBar'\r\n\r\nconst SearchNew =() =>{\r\n    const initFilter = {\r\n        genre: [],\r\n        booktype: [],\r\n        size: []\r\n    }\r\n    \r\n    const productList = productData.getAllProducts()\r\n    \r\n    const [products, setProducts] = useState(productList)\r\n    \r\n    const [filter, setFilter] = useState(initFilter)\r\n    \r\n    const filterSelect = (type, checked, item) => {\r\n        if (checked) {\r\n            switch(type) {\r\n                case \"genre\":\r\n                    setFilter({...filter, genre: [...filter.genre, item.genreSlug]})\r\n                    break\r\n                case \"BOOK TYPE\":\r\n                    setFilter({...filter, booktype: [...filter.booktype, item.booktype]})\r\n                    break\r\n                default:\r\n            }\r\n        } else {\r\n            switch(type) {\r\n                case \"GENRE\":\r\n                    const newGenre = filter.genre.filter(e => e !== item.genreSlug)\r\n                    setFilter({...filter, genre: newGenre})\r\n                    break\r\n                case \"BOOK TYPE\":\r\n                    const newBookType = filter.booktype.filter(e => e !== item.booktype)\r\n                    setFilter({...filter, booktype: newBookType})\r\n                    break\r\n               \r\n                default:\r\n            }\r\n        }\r\n    }\r\n    \r\n    const clearFilter = () => setFilter(initFilter)\r\n    \r\n    const updateProducts = useCallback(\r\n        () => {\r\n            let temp = productList\r\n    \r\n            if (filter.genre.length > 0) {\r\n                temp = temp.filter(e => filter.genre.includes(e.genreSlug))\r\n            }\r\n    \r\n            if (filter.booktype.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check = e.booktypes.find(booktype => filter.booktype.includes(booktype))\r\n                    return check !== undefined\r\n                })\r\n            }\r\n            setProducts(temp)\r\n        },\r\n        [filter, productList],\r\n    )\r\n    \r\n    useEffect(() => {\r\n        updateProducts()\r\n    }, [updateProducts])\r\n    \r\n    const filterRef = useRef(null)\r\n    \r\n    const showHideFilter = () => filterRef.current.classList.toggle('active')\r\n    \r\n    return (\r\n        // <Helmet title=\"Search Product\">\r\n            <div className=\"catalog\">\r\n                {/* <div className=\"catalog__filter\" ref={filterRef}>\r\n                    <div className=\"catalog__filter__close\" onClick={() => showHideFilter()}>\r\n                        <i className=\"bx bx-left-arrow-alt\"></i>\r\n                    </div>\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            Book format\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                booktypes.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"booktype\", input.checked, item)}\r\n                                            checked={filter.booktype.includes(item.booktype)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            Genre\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                genre.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"GENRE\", input.checked, item)}\r\n                                            checked={filter.genre.includes(item.genreSlug)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n    \r\n                    \r\n    \r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            <Button size=\"sm\" onClick={clearFilter}>CLEAR FILTER</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"catalog__filter__toggle\">\r\n                    <Button size=\"sm\" onClick={() => showHideFilter()}>Filter</Button>\r\n                </div>\r\n                 */}\r\n                <div className=\"catalog__content\">\r\n                    <SearchBar placeholder=\"Search for product\" data={products} />\r\n                    <div className=\"bookresults\">\r\n                        <InfinityList\r\n                            data={products}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        // </Helmet>\r\n    )\r\n}\r\n\r\nexport default SearchNew"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}